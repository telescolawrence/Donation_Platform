service: () -> {
    addDonorToCampaign: (text, text) -> (variant {Ok:record {id:text; status:text; title:text; creator:principal; goal:nat64; description:text; raised:nat64; donor:vec text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    changeRaised: (text, nat64) -> (variant {Ok:record {id:text; status:text; title:text; creator:principal; goal:nat64; description:text; raised:nat64; donor:vec text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    changeStatus: (text) -> (variant {Ok:record {id:text; status:text; title:text; creator:principal; goal:nat64; description:text; raised:nat64; donor:vec text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    completeReserveDonation: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:variant {PaymentPending:text; Completed:text}; reciever:principal; donator:principal; donorId:text; memo:nat64; price:nat64; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createCampaign: (record {title:text; goal:nat64; description:text}) -> (variant {Ok:record {id:text; status:text; title:text; creator:principal; goal:nat64; description:text; raised:nat64; donor:vec text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createDonor: (record {name:text; email:text}) -> (variant {Ok:record {id:text; owner:principal; name:text; email:text; donationAmount:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createReserveDonation: (text, text, nat64) -> (variant {Ok:record {status:variant {PaymentPending:text; Completed:text}; reciever:principal; donator:principal; donorId:text; memo:nat64; price:nat64; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    deleteCampaign: (text) -> (variant {Ok:record {id:text; status:text; title:text; creator:principal; goal:nat64; description:text; raised:nat64; donor:vec text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    deleteDonor: (text) -> (variant {Ok:record {id:text; owner:principal; name:text; email:text; donationAmount:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    getAddressFromPrincipal: (principal) -> (text) query;
    getCampaign: (text) -> (variant {Ok:record {id:text; status:text; title:text; creator:principal; goal:nat64; description:text; raised:nat64; donor:vec text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getCampaigns: () -> (vec record {id:text; status:text; title:text; creator:principal; goal:nat64; description:text; raised:nat64; donor:vec text}) query;
    getDonor: (text) -> (variant {Ok:record {id:text; owner:principal; name:text; email:text; donationAmount:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDonors: () -> (vec record {id:text; owner:principal; name:text; email:text; donationAmount:nat64}) query;
    updateCampaign: (record {id:text; status:text; title:text; creator:principal; goal:nat64; description:text; raised:nat64; donor:vec text}) -> (variant {Ok:record {id:text; status:text; title:text; creator:principal; goal:nat64; description:text; raised:nat64; donor:vec text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDonor: (record {id:text; owner:principal; name:text; email:text; donationAmount:nat64}) -> (variant {Ok:record {id:text; owner:principal; name:text; email:text; donationAmount:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    verifyPayment: (principal, nat64, nat64, nat64) -> (bool) query;
}
